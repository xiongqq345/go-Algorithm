package _52_周赛

//特殊序列 是由 正整数 个 0 ，紧接着 正整数 个 1 ，最后 正整数 个 2 组成的序列。
//
//比方说，[0,1,2] 和 [0,0,1,1,1,2] 是特殊序列。
//相反，[2,1,0] ，[1] 和 [0,1,2,0] 就不是特殊序列。
//给你一个数组 nums （仅 包含整数 0，1 和 2），请你返回 不同特殊子序列的数目 。由于答案可能很大，请你将它对 109 + 7 取余 后返回。
//
//一个数组的 子序列 是从原数组中删除零个或者若干个元素后，剩下元素不改变顺序得到的序列。如果两个子序列的 下标集合 不同，那么这两个子序列是 不同的 。

func countSpecialSubsequences(nums []int) int {
	mod := 1e9 + 7
	var f0, f1, f2 int
	for _, num := range nums {
		switch num {
		case 0:
			f0 = (2*f0 + 1) % int(mod)
		case 1:
			f1 = (2*f1 + f0) % int(mod)
		case 2:
			f2 = (2*f2 + f1) % int(mod)
		}
	}
	return f2
}
